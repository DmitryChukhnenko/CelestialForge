services:  
  # RabbitMQ
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VIRTUAL_HOST}
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}" # Стандартный порт для RabbitMQ
      - "${RABBITMQ_ADMIN_PORT}:${RABBITMQ_ADMIN_PORT}" # UI для администрирования RabbitMQ 
    networks:
      - app-network

  # База данных (PostgreSQL)
  db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - app-network

  # Файловое хранилище (Minio)
  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_HTTP_ADDR: ${MINIO_HTTP_ADDR}
      MINIO_BROWSER: ${MINIO_BROWSER}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data
    ports:
      - "${MINIO_PORT}:${MINIO_PORT}"
    volumes:
      - minio_data:/data
    networks:
      - app-network
    
  #Spring
  app:
    build: .
    container_name: spring-boot-app
    env_file:
      - .env
    ports:
      - "8080:8080"    
    volumes:
      - ./uploads:/app/uploads    
    depends_on:
      - db
      - rabbitmq
      - minio
    networks:
      - app-network

  #Nginx
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - rabbitmq
      - minio
    networks:
      - app-network

volumes:
  minio_data:

networks:
  app-network:
    driver: bridge
